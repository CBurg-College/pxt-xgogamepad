{"entries":[{"timestamp":1738360785634,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s"],[0,"://"],[-1,"developers.google.com/blockly/xml\"><variables></variables>"],[1,"www.w3.org/1999/xhtml\">\n  "],[0,"<blo"]],"start1":12,"start2":12,"length1":70,"length2":37},{"diffs":[[0,"art\""],[-1," x=\"20\" y=\"20\""],[0,"></b"]],"start1":67,"start2":67,"length1":22,"length2":8},{"diffs":[[0,"</block>"],[1,"\n  "],[0,"<block t"]],"start1":72,"start2":72,"length1":16,"length2":19},{"diffs":[[0,"ver\""],[-1," x=\"225\" y=\"20\""],[0,"></b"]],"start1":107,"start2":107,"length1":23,"length2":8},{"diffs":[[0,"</block>"],[1,"\n"],[0,"</xml>"]],"start1":112,"start2":112,"length1":14,"length2":15}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"//% color=\"#EEAA00\" icon=\"\\uf11b\"\n//% block=\"Gamepad\"\nnamespace EtGamepad {\n\n    export enum Group {\n        //% block=\"group 1\"\n        //% block.loc.nl=\"groep 1\"\n        Group1,\n        //% block=\"group 2\"\n        //% block.loc.nl=\"groep 2\"\n        Group2,\n        //% block=\"group 3\"\n        //% block.loc.nl=\"groep 3\"\n        Group3,\n        //% block=\"group 4\"\n        //% block.loc.nl=\"groep 4\"\n        Group4,\n        //% block=\"group 5\"\n        //% block.loc.nl=\"groep 5\"\n        Group5,\n        //% block=\"group 6\"\n        //% block.loc.nl=\"groep 6\"\n        Group6,\n        //% block=\"group 7\"\n        //% block.loc.nl=\"groep 7\"\n        Group7,\n        //% block=\"group 8\"\n        //% block.loc.nl=\"groep 8\"\n        Group8,\n        //% block=\"group 9\"\n        //% block.loc.nl=\"groep 9\"\n        Group9\n    }\n\n    let GROUP = Group.Group1\n\n    export enum Gamepad {\n        //% block=\"black-top\"\n        //% block.loc.nl=\"zwart-boven\"\n        Button1, //P13\n        //% block=\"black-bottom\"\n        //% block.loc.nl=\"zwart-onder\"\n        Button2, //P15 \n        //% block=\"black-left\"\n        //% block.loc.nl=\"zwart-links\"\n        Button3, //P1\n        //% block=\"black-right\"\n        //% block.loc.nl=\"zwart-rechts\"\n        Button4, //P12\n        //% block=\"white-top\"\n        //% block.loc.nl=\"wit-boven\"\n        Button5, //p16\n        //% block=\"white-bottom\"\n        //% block.loc.nl=\"wit-onder\"\n        Button6, //P2\n        //% block=\"white-left\"\n        //% block.loc.nl=\"wit-links\"\n        Button7, //P8\n        //% block=\"white-right\"\n        //% block.loc.nl=\"wit-rechts\"\n        Button8, //P14\n        //% block=\"yellow-top\"\n        //% block.loc.nl=\"geel-boven\"\n        Button9, //P9\n        //% block=\"yellow-bottom\"\n        //% block.loc.nl=\"geel-onder\"\n        Button10, //P0\n        //% block=\"blue\"\n        //% block.loc.nl=\"blauw\"\n        Button11, //P5\n        //% block=\"red\"\n        //% block.loc.nl=\"rood\"\n        Button12 //P11\n    }\n\n    export let BUTTONMAX = 12\n\n    let PRESSED1 = false\n    let PRESSED2 = false\n    let PRESSED3 = false\n    let PRESSED4 = false\n    let PRESSED5 = false\n    let PRESSED6 = false\n    let PRESSED7 = false\n    let PRESSED8 = false\n    let PRESSED9 = false\n    let PRESSED10 = false\n    let PRESSED11 = false\n    let PRESSED12 = false\n\n    type gamepadHandler = () => void\n\n    let EventPressed1: gamepadHandler\n    let EventPressed2: gamepadHandler\n    let EventPressed3: gamepadHandler\n    let EventPressed4: gamepadHandler\n    let EventPressed5: gamepadHandler\n    let EventPressed6: gamepadHandler\n    let EventPressed7: gamepadHandler\n    let EventPressed8: gamepadHandler\n    let EventPressed9: gamepadHandler\n    let EventPressed10: gamepadHandler\n    let EventPressed11: gamepadHandler\n    let EventPressed12: gamepadHandler\n\n    let EventReleased1: gamepadHandler\n    let EventReleased2: gamepadHandler\n    let EventReleased3: gamepadHandler\n    let EventReleased4: gamepadHandler\n    let EventReleased5: gamepadHandler\n    let EventReleased6: gamepadHandler\n    let EventReleased7: gamepadHandler\n    let EventReleased8: gamepadHandler\n    let EventReleased9: gamepadHandler\n    let EventReleased10: gamepadHandler\n    let EventReleased11: gamepadHandler\n    let EventReleased12: gamepadHandler\n\n    export function handleEventPressed(button: Gamepad) {\n        switch (button) {\n            case Gamepad.Button1: PRESSED1 = true; if (EventPressed1) EventPressed1(); break;\n            case Gamepad.Button2: PRESSED2 = true; if (EventPressed2) EventPressed2(); break;\n            case Gamepad.Button3: PRESSED3 = true; if (EventPressed3) EventPressed3(); break;\n            case Gamepad.Button4: PRESSED4 = true; if (EventPressed4) EventPressed4(); break;\n            case Gamepad.Button5: PRESSED5 = true; if (EventPressed5) EventPressed5(); break;\n            case Gamepad.Button6: PRESSED6 = true; if (EventPressed6) EventPressed6(); break;\n            case Gamepad.Button7: PRESSED7 = true; if (EventPressed7) EventPressed7(); break;\n            case Gamepad.Button8: PRESSED8 = true; if (EventPressed8) EventPressed8(); break;\n            case Gamepad.Button9: PRESSED9 = true; if (EventPressed9) EventPressed9(); break;\n            case Gamepad.Button10: PRESSED10 = true; if (EventPressed10) EventPressed10(); break;\n            case Gamepad.Button11: PRESSED11 = true; if (EventPressed11) EventPressed11(); break;\n            case Gamepad.Button12: PRESSED12 = true; if (EventPressed12) EventPressed12(); break;\n        }\n    }\n\n    export function handleEventReleased(button: Gamepad) {\n        switch (button) {\n            case Gamepad.Button1: PRESSED1 = false; if (EventReleased1) EventReleased1(); break;\n            case Gamepad.Button2: PRESSED2 = false; if (EventReleased2) EventReleased2(); break;\n            case Gamepad.Button3: PRESSED3 = false; if (EventReleased3) EventReleased3(); break;\n            case Gamepad.Button4: PRESSED4 = false; if (EventReleased4) EventReleased4(); break;\n            case Gamepad.Button5: PRESSED5 = false; if (EventReleased5) EventReleased5(); break;\n            case Gamepad.Button6: PRESSED6 = false; if (EventReleased6) EventReleased6(); break;\n            case Gamepad.Button7: PRESSED7 = false; if (EventReleased7) EventReleased7(); break;\n            case Gamepad.Button8: PRESSED8 = false; if (EventReleased8) EventReleased8(); break;\n            case Gamepad.Button9: PRESSED9 = false; if (EventReleased9) EventReleased9(); break;\n            case Gamepad.Button10: PRESSED10 = false; if (EventReleased10) EventReleased10(); break;\n            case Gamepad.Button11: PRESSED11 = false; if (EventReleased11) EventReleased11(); break;\n            case Gamepad.Button12: PRESSED12 = false; if (EventReleased12) EventReleased12(); break;\n        }\n    }\n\n    radio.onReceivedNumber(function (button: number) {\n        if (button >= BUTTONMAX) {\n            button -= BUTTONMAX\n            handleEventReleased(button)\n        }\n        else\n            handleEventPressed(button)\n    })\n\n    //% block=\"join %group\"\n    //% block.loc.nl=\"sluit aan bij %group\"\n    export function setGroup(group: Group) {\n        GROUP = group + 1\n        radio.setGroup(GROUP)\n    }\n\n    //% block=\"%button is up\"\n    //% block.loc.nl=\"%button is losgelaten\"\n    export function isReleased(button: Gamepad): boolean {\n        switch (button) {\n            case Gamepad.Button1: return !PRESSED1;\n            case Gamepad.Button2: return !PRESSED2;\n            case Gamepad.Button3: return !PRESSED3;\n            case Gamepad.Button4: return !PRESSED4;\n            case Gamepad.Button5: return !PRESSED5;\n            case Gamepad.Button6: return !PRESSED6;\n            case Gamepad.Button7: return !PRESSED7;\n            case Gamepad.Button8: return !PRESSED8;\n            case Gamepad.Button9: return !PRESSED9;\n            case Gamepad.Button10: return !PRESSED10;\n            case Gamepad.Button11: return !PRESSED11;\n            case Gamepad.Button12: return !PRESSED12;\n        }\n        return false;\n    }\n\n    //% block=\"%button is down\"\n    //% block.loc.nl=\"%button is ingedrukt\"\n    export function isPressed(button: Gamepad): boolean {\n        switch (button) {\n            case Gamepad.Button1: return PRESSED1;\n            case Gamepad.Button2: return PRESSED2;\n            case Gamepad.Button3: return PRESSED3;\n            case Gamepad.Button4: return PRESSED4;\n            case Gamepad.Button5: return PRESSED5;\n            case Gamepad.Button6: return PRESSED6;\n            case Gamepad.Button7: return PRESSED7;\n            case Gamepad.Button8: return PRESSED8;\n            case Gamepad.Button9: return PRESSED9;\n            case Gamepad.Button10: return PRESSED10;\n            case Gamepad.Button11: return PRESSED11;\n            case Gamepad.Button12: return PRESSED12;\n        }\n        return false;\n    }\n\n    //% block=\"when %button is released\"\n    //% block.loc.nl=\"wanneer %button wordt losgelaten\"\n    export function onButtonReleased(button: Gamepad, programmableCode: () => void): void {\n        switch (button) {\n            case Gamepad.Button1: EventReleased1 = programmableCode; break;\n            case Gamepad.Button2: EventReleased2 = programmableCode; break;\n            case Gamepad.Button3: EventReleased3 = programmableCode; break;\n            case Gamepad.Button4: EventReleased4 = programmableCode; break;\n            case Gamepad.Button5: EventReleased5 = programmableCode; break;\n            case Gamepad.Button6: EventReleased6 = programmableCode; break;\n            case Gamepad.Button7: EventReleased7 = programmableCode; break;\n            case Gamepad.Button8: EventReleased8 = programmableCode; break;\n            case Gamepad.Button9: EventReleased9 = programmableCode; break;\n            case Gamepad.Button10: EventReleased10 = programmableCode; break;\n            case Gamepad.Button11: EventReleased11 = programmableCode; break;\n            case Gamepad.Button12: EventReleased12 = programmableCode; break;\n        }\n    }\n\n    //% block=\"when %button is pressed\"\n    //% block.loc.nl=\"wanneer op %button gedrukt\"\n    export function onButtonPressed(button: Gamepad, programmableCode: () => void): void {\n        switch (button) {\n            case Gamepad.Button1: EventPressed1 = programmableCode; break;\n            case Gamepad.Button2: EventPressed2 = programmableCode; break;\n            case Gamepad.Button3: EventPressed3 = programmableCode; break;\n            case Gamepad.Button4: EventPressed4 = programmableCode; break;\n            case Gamepad.Button5: EventPressed5 = programmableCode; break;\n            case Gamepad.Button6: EventPressed6 = programmableCode; break;\n            case Gamepad.Button7: EventPressed7 = programmableCode; break;\n            case Gamepad.Button8: EventPressed8 = programmableCode; break;\n            case Gamepad.Button9: EventPressed9 = programmableCode; break;\n            case Gamepad.Button10: EventPressed10 = programmableCode; break;\n            case Gamepad.Button11: EventPressed11 = programmableCode; break;\n            case Gamepad.Button12: EventPressed12 = programmableCode; break;\n        }\n    }\n\n}"],[0,"\n"]],"start1":0,"start2":0,"length1":10131,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"   \""],[-1,"preferredEditor\": \"tsprj\""],[1,"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":236,"start2":236,"length1":32,"length2":31}]}]},{"timestamp":1738360794224,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ONMAX = "],[1,"12"],[0,"\n\n    le"]],"start1":1986,"start2":1986,"length1":16,"length2":18}]}]},{"timestamp":1738388579452,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ONMAX = "],[-1,"4"],[0,"\n\n    le"]],"start1":1986,"start2":1986,"length1":17,"length2":16}]}]},{"timestamp":1738388580571,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0," block=\""],[-1,"Joystick"],[1,"Gamepad"],[0,"\"\nnamesp"]],"start1":37,"start2":37,"length1":24,"length2":23},{"diffs":[[0,"ace "],[-1,"CJoystick"],[1,"EtGamepad"],[0," {\n\n"]],"start1":60,"start2":60,"length1":17,"length2":17},{"diffs":[[0," block=\""],[-1,"u"],[1,"black-to"],[0,"p\"\n     "]],"start1":885,"start2":885,"length1":17,"length2":24},{"diffs":[[0,"nl=\""],[-1,"omhoog"],[1,"zwart-boven"],[0,"\"\n  "]],"start1":926,"start2":926,"length1":14,"length2":19},{"diffs":[[0,"n1, //P1"],[-1,"2"],[1,"3"],[0,"\n       "]],"start1":956,"start2":956,"length1":17,"length2":17},{"diffs":[[0,"ck=\""],[-1,"down\"\n        //% block.loc.nl=\"omlaag"],[1,"black-bottom\"\n        //% block.loc.nl=\"zwart-onder\"\n        Button2, //P15 \n        //% block=\"black-left\"\n        //% block.loc.nl=\"zwart-links\"\n        Button3, //P1\n        //% block=\"black-right\"\n        //% block.loc.nl=\"zwart-rechts"],[0,"\"\n  "]],"start1":981,"start2":981,"length1":46,"length2":247},{"diffs":[[0,"tton"],[-1,"2"],[1,"4"],[0,", //P1"],[-1,"5 \n        //% block=\""],[1,"2\n        //% block=\"white-top\"\n        //% block.loc.nl=\"wit-boven\"\n        Button5, //p16\n        //% block=\"white-bottom\"\n        //% block.loc.nl=\"wit-onder\"\n        Button6, //P2\n        //% block=\"white-"],[0,"left"]],"start1":1236,"start2":1236,"length1":37,"length2":224},{"diffs":[[0,"loc.nl=\""],[1,"wit-"],[0,"links\"\n "]],"start1":1480,"start2":1480,"length1":16,"length2":20},{"diffs":[[0,"tton"],[-1,"3"],[1,"7"],[0,", //P"],[-1,"13"],[1,"8"],[0,"\n   "]],"start1":1509,"start2":1509,"length1":16,"length2":15},{"diffs":[[0," block=\""],[1,"white-"],[0,"right\"\n "]],"start1":1532,"start2":1532,"length1":16,"length2":22},{"diffs":[[0,"loc.nl=\""],[1,"wit-"],[0,"rechts\"\n"]],"start1":1571,"start2":1571,"length1":16,"length2":20},{"diffs":[[0,"tton"],[-1,"4 //P14\n    }\n\n    export let BUTTONMAX = 4\n\n    let PRESSED1 = false\n    let PRESSED2 = false\n    let PRESSED3 = false\n    let PRESSED4"],[1,"8, //P14\n        //% block=\"yellow-top\"\n        //% block.loc.nl=\"geel-boven\"\n        Button9, //P9\n        //% block=\"yellow-bottom\"\n        //% block.loc.nl=\"geel-onder\"\n        Button10, //P0\n        //% block=\"blue\"\n        //% block.loc.nl=\"blauw\"\n        Button11, //P5\n        //% block=\"red\"\n        //% block.loc.nl=\"rood\"\n        Button12 //P11\n    }\n\n    export let BUTTONMAX = 4\n\n    let PRESSED1 = false\n    let PRESSED2 = false\n    let PRESSED3 = false\n    let PRESSED4 = false\n    let PRESSED5 = false\n    let PRESSED6 = false\n    let PRESSED7 = false\n    let PRESSED8 = false\n    let PRESSED9 = false\n    let PRESSED10 = false\n    let PRESSED11 = false\n    let PRESSED12"],[0," = f"]],"start1":1601,"start2":1601,"length1":144,"length2":694},{"diffs":[[0,"epadHandler\n"],[-1,"\n"],[0,"    let Even"]],"start1":2479,"start2":2479,"length1":25,"length2":24},{"diffs":[[0,"et Event"],[-1,"Released1"],[1,"Pressed5"],[0,": gamepa"]],"start1":2496,"start2":2496,"length1":25,"length2":24},{"diffs":[[0,"et Event"],[-1,"Released2"],[1,"Pressed6"],[0,": gamepa"]],"start1":2534,"start2":2534,"length1":25,"length2":24},{"diffs":[[0,"et Event"],[-1,"Released3"],[1,"Pressed7"],[0,": gamepa"]],"start1":2572,"start2":2572,"length1":25,"length2":24},{"diffs":[[0,"et Event"],[-1,"Released4"],[1,"Pressed8"],[0,": gamepa"]],"start1":2610,"start2":2610,"length1":25,"length2":24},{"diffs":[[0,"ler\n"],[-1,"\n    pins.digitalWritePin(DigitalPin.P0, 0)\n    pins.setPull(DigitalPin.P12, PinPullMode.PullUp)\n    pins.setPull(DigitalPin.P13, PinPullMode.PullUp)\n    pins.setPull(DigitalPin.P14, PinPullMode.PullUp)\n    pins.setPull(DigitalPin.P15, PinPullMode.PullUp)\n    pins.digitalWritePin(DigitalPin.P16, 1)\n\n    export function handleEventPressed(button: Gamepad) {\n        switch (button) {\n            case Gamepad.Button1: PRESSED1 = true; if (EventPressed1) EventPressed1(); break;\n            case Gamepad.Button2: PRESSED2 = true; if (EventPressed2) EventPressed2(); break;\n            case Gamepad.Button3: PRESSED3 = true; if (EventPressed3) EventPressed3(); break;\n            case Gamepad.Button4: PRESSED4 = true; if (EventPressed4) EventPressed4(); break;\n        }\n    }\n\n    export function handleEventReleased(button: Gamepad) {\n        switch (button) {\n            case Gamepad.Button1: PRESSED1 = false; if (EventReleased1) EventReleased1(); break;\n            case Gamepad.Button2: PRESSED2 = false; if (EventReleased2) EventReleased2(); break;\n            case Gamepad.Button3: PRESSED3 = false; if (EventReleased3) EventReleased3(); break;\n            case Gamepad.Button4: PRESSED4 = false; if (EventReleased4) EventReleased4(); break;\n        }\n    }\n\n    radio.onReceivedNumber(function (button: number) {\n        if (button >= BUTTONMAX) {\n            button -= BUTTONMAX\n            handleEventReleased(button)\n        }\n        else\n            handleEventPressed(button)\n    })\n\n    //% block=\"join %group\"\n    //% block.loc.nl=\"sluit aan bij %group\"\n    export function setGroup(group: Group) {\n        GROUP = group + 1\n        radio.setGroup(GROUP)\n    }\n\n    //% block=\"%button is up\"\n    //% block.loc.nl=\"%button is losgelaten\"\n    export function isReleased(button: Gamepad): boolean {\n        switch (button) {\n            case Gamepad.Button1: return !PRESSED1;\n            case Gamepad.Button2: return !PRESSED2;\n            case Gamepad.Button3: return !PRESSED3;\n            case Gamepad.Button4: return !PRESSED4;\n        }\n        return false;\n    }\n\n    //% block=\"%button is down\"\n    //% block.loc.nl=\"%button is ingedrukt\"\n    export function isPressed(button: Gamepad): boolean {\n        switch (button) {\n            case Gamepad.Button1: return PRESSED1;\n            case Gamepad.Button2: return PRESSED2;\n            case Gamepad.Button3: return PRESSED3;\n            case Gamepad.Button4: return PRESSED4;\n        }\n        return false;\n    }\n\n    //% block=\"when %button is released\"\n    //% block.loc.nl=\"wanneer %button wordt losgelaten\"\n    export function onButtonReleased(button: Gamepad, programmableCode: () => void): void {\n        switch (button) {\n            case Gamepad.Button1: EventReleased1 = programmableCode; break;\n            case Gamepad.Button2: EventReleased2 = programmableCode; break;\n            case Gamepad.Button3: EventReleased3 = programmableCode; break;\n            case Gamepad.Button4: EventReleased4 = programmableCode; break;\n        }\n    }\n\n    //% block=\"when %button is pressed\"\n    //% block.loc.nl=\"wanneer op %button gedrukt\"\n    export function onButtonPressed(button: Gamepad, programmableCode: () => void): void {\n        switch (button) {\n            case Gamepad.Button1: EventPressed1 = programmableCode; break;\n            case Gamepad.Button2: EventPressed2 = programmableCode; break;\n            case Gamepad.Button3: EventPressed3 = programmableCode; break;\n            case Gamepad.Button4: EventPressed4"],[1,"    let EventPressed9: gamepadHandler\n    let EventPressed10: gamepadHandler\n    let EventPressed11: gamepadHandler\n    let EventPressed12: gamepadHandler\n\n    let EventReleased1: gamepadHandler\n    let EventReleased2: gamepadHandler\n    let EventReleased3: gamepadHandler\n    let EventReleased4: gamepadHandler\n    let EventReleased5: gamepadHandler\n    let EventReleased6: gamepadHandler\n    let EventReleased7: gamepadHandler\n    let EventReleased8: gamepadHandler\n    let EventReleased9: gamepadHandler\n    let EventReleased10: gamepadHandler\n    let EventReleased11: gamepadHandler\n    let EventReleased12: gamepadHandler\n\n    export function handleEventPressed(button: Gamepad) {\n        switch (button) {\n            case Gamepad.Button1: PRESSED1 = true; if (EventPressed1) EventPressed1(); break;\n            case Gamepad.Button2: PRESSED2 = true; if (EventPressed2) EventPressed2(); break;\n            case Gamepad.Button3: PRESSED3 = true; if (EventPressed3) EventPressed3(); break;\n            case Gamepad.Button4: PRESSED4 = true; if (EventPressed4) EventPressed4(); break;\n            case Gamepad.Button5: PRESSED5 = true; if (EventPressed5) EventPressed5(); break;\n            case Gamepad.Button6: PRESSED6 = true; if (EventPressed6) EventPressed6(); break;\n            case Gamepad.Button7: PRESSED7 = true; if (EventPressed7) EventPressed7(); break;\n            case Gamepad.Button8: PRESSED8 = true; if (EventPressed8) EventPressed8(); break;\n            case Gamepad.Button9: PRESSED9 = true; if (EventPressed9) EventPressed9(); break;\n            case Gamepad.Button10: PRESSED10 = true; if (EventPressed10) EventPressed10(); break;\n            case Gamepad.Button11: PRESSED11 = true; if (EventPressed11) EventPressed11(); break;\n            case Gamepad.Button12: PRESSED12 = true; if (EventPressed12) EventPressed12(); break;\n        }\n    }\n\n    export function handleEventReleased(button: Gamepad) {\n        switch (button) {\n            case Gamepad.Button1: PRESSED1 = false; if (EventReleased1) EventReleased1(); break;\n            case Gamepad.Button2: PRESSED2 = false; if (EventReleased2) EventReleased2(); break;\n            case Gamepad.Button3: PRESSED3 = false; if (EventReleased3) EventReleased3(); break;\n            case Gamepad.Button4: PRESSED4 = false; if (EventReleased4) EventReleased4(); break;\n            case Gamepad.Button5: PRESSED5 = false; if (EventReleased5) EventReleased5(); break;\n            case Gamepad.Button6: PRESSED6 = false; if (EventReleased6) EventReleased6(); break;\n            case Gamepad.Button7: PRESSED7 = false; if (EventReleased7) EventReleased7(); break;\n            case Gamepad.Button8: PRESSED8 = false; if (EventReleased8) EventReleased8(); break;\n            case Gamepad.Button9: PRESSED9 = false; if (EventReleased9) EventReleased9(); break;\n            case Gamepad.Button10: PRESSED10 = false; if (EventReleased10) EventReleased10(); break;\n            case Gamepad.Button11: PRESSED11 = false; if (EventReleased11) EventReleased11(); break;\n            case Gamepad.Button12: PRESSED12 = false; if (EventReleased12) EventReleased12(); break;\n        }\n    }\n\n    radio.onReceivedNumber(function (button: number) {\n        if (button >= BUTTONMAX) {\n            button -= BUTTONMAX\n            handleEventReleased(button)\n        }\n        else\n            handleEventPressed(button)\n    })\n\n    //% block=\"join %group\"\n    //% block.loc.nl=\"sluit aan bij %group\"\n    export function setGroup(group: Group) {\n        GROUP = group + 1\n        radio.setGroup(GROUP)\n    }\n\n    //% block=\"%button is up\"\n    //% block.loc.nl=\"%button is losgelaten\"\n    export function isReleased(button: Gamepad): boolean {\n        switch (button) {\n            case Gamepad.Button1: return !PRESSED1;\n            case Gamepad.Button2: return !PRESSED2;\n            case Gamepad.Button3: return !PRESSED3;\n            case Gamepad.Button4: return !PRESSED4;\n            case Gamepad.Button5: return !PRESSED5;\n            case Gamepad.Button6: return !PRESSED6;\n            case Gamepad.Button7: return !PRESSED7;\n            case Gamepad.Button8: return !PRESSED8;\n            case Gamepad.Button9: return !PRESSED9;\n            case Gamepad.Button10: return !PRESSED10;\n            case Gamepad.Button11: return !PRESSED11;\n            case Gamepad.Button12: return !PRESSED12;\n        }\n        return false;\n    }\n\n    //% block=\"%button is down\"\n    //% block.loc.nl=\"%button is ingedrukt\"\n    export function isPressed(button: Gamepad): boolean {\n        switch (button) {\n            case Gamepad.Button1: return PRESSED1;\n            case Gamepad.Button2: return PRESSED2;\n            case Gamepad.Button3: return PRESSED3;\n            case Gamepad.Button4: return PRESSED4;\n            case Gamepad.Button5: return PRESSED5;\n            case Gamepad.Button6: return PRESSED6;\n            case Gamepad.Button7: return PRESSED7;\n            case Gamepad.Button8: return PRESSED8;\n            case Gamepad.Button9: return PRESSED9;\n            case Gamepad.Button10: return PRESSED10;\n            case Gamepad.Button11: return PRESSED11;\n            case Gamepad.Button12: return PRESSED12;\n        }\n        return false;\n    }\n\n    //% block=\"when %button is released\"\n    //% block.loc.nl=\"wanneer %button wordt losgelaten\"\n    export function onButtonReleased(button: Gamepad, programmableCode: () => void): void {\n        switch (button) {\n            case Gamepad.Button1: EventReleased1 = programmableCode; break;\n            case Gamepad.Button2: EventReleased2 = programmableCode; break;\n            case Gamepad.Button3: EventReleased3 = programmableCode; break;\n            case Gamepad.Button4: EventReleased4 = programmableCode; break;\n            case Gamepad.Button5: EventReleased5 = programmableCode; break;\n            case Gamepad.Button6: EventReleased6 = programmableCode; break;\n            case Gamepad.Button7: EventReleased7 = programmableCode; break;\n            case Gamepad.Button8: EventReleased8 = programmableCode; break;\n            case Gamepad.Button9: EventReleased9 = programmableCode; break;\n            case Gamepad.Button10: EventReleased10 = programmableCode; break;\n            case Gamepad.Button11: EventReleased11 = programmableCode; break;\n            case Gamepad.Button12: EventReleased12 = programmableCode; break;\n        }\n    }\n\n    //% block=\"when %button is pressed\"\n    //% block.loc.nl=\"wanneer op %button gedrukt\"\n    export function onButtonPressed(button: Gamepad, programmableCode: () => void): void {\n        switch (button) {\n            case Gamepad.Button1: EventPressed1 = programmableCode; break;\n            case Gamepad.Button2: EventPressed2 = programmableCode; break;\n            case Gamepad.Button3: EventPressed3 = programmableCode; break;\n            case Gamepad.Button4: EventPressed4 = programmableCode; break;\n            case Gamepad.Button5: EventPressed5 = programmableCode; break;\n            case Gamepad.Button6: EventPressed6 = programmableCode; break;\n            case Gamepad.Button7: EventPressed7 = programmableCode; break;\n            case Gamepad.Button8: EventPressed8 = programmableCode; break;\n            case Gamepad.Button9: EventPressed9 = programmableCode; break;\n            case Gamepad.Button10: EventPressed10 = programmableCode; break;\n            case Gamepad.Button11: EventPressed11 = programmableCode; break;\n            case Gamepad.Button12: EventPressed12"],[0," = p"]],"start1":2639,"start2":2639,"length1":3513,"length2":7448}]}]},{"timestamp":1738389093240,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"iables><"],[1,"block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block><"],[0,"/xml>"]],"start1":71,"start2":71,"length1":13,"length2":114}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"r=\"#"],[-1,"00CC"],[1,"EEAA"],[0,"00\" "]],"start1":8,"start2":8,"length1":12,"length2":12},{"diffs":[[0,"ck=\""],[-1,"XGO Gamepad\"\n//% block.loc.nl=\"XGO Gamepad"],[1,"Joystick"],[0,"\"\nna"]],"start1":41,"start2":41,"length1":50,"length2":16},{"diffs":[[0,"ce C"],[-1,"XgoGamepad"],[1,"Joystick"],[0," {\n\n"]],"start1":62,"start2":62,"length1":18,"length2":16}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"pxt-"],[-1,"xgogamepad"],[1,"joystick"],[0,"\",\n "]],"start1":15,"start2":15,"length1":18,"length2":16},{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":231,"start2":231,"length1":52,"length2":8}]},{"type":"added","filename":"test.ts","value":"// tests gaan hier; deze zal niet worden gecompileerd wanneer dit pakket wordt gebruikt als extensie.\n"}]}],"snapshots":[{"timestamp":1738360785633,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"pxt-joystick\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}},{"timestamp":1738388579452,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"//% color=\"#EEAA00\" icon=\"\\uf11b\"\n//% block=\"Gamepad\"\nnamespace EtGamepad {\n\n    export enum Group {\n        //% block=\"group 1\"\n        //% block.loc.nl=\"groep 1\"\n        Group1,\n        //% block=\"group 2\"\n        //% block.loc.nl=\"groep 2\"\n        Group2,\n        //% block=\"group 3\"\n        //% block.loc.nl=\"groep 3\"\n        Group3,\n        //% block=\"group 4\"\n        //% block.loc.nl=\"groep 4\"\n        Group4,\n        //% block=\"group 5\"\n        //% block.loc.nl=\"groep 5\"\n        Group5,\n        //% block=\"group 6\"\n        //% block.loc.nl=\"groep 6\"\n        Group6,\n        //% block=\"group 7\"\n        //% block.loc.nl=\"groep 7\"\n        Group7,\n        //% block=\"group 8\"\n        //% block.loc.nl=\"groep 8\"\n        Group8,\n        //% block=\"group 9\"\n        //% block.loc.nl=\"groep 9\"\n        Group9\n    }\n\n    let GROUP = Group.Group1\n\n    export enum Gamepad {\n        //% block=\"black-top\"\n        //% block.loc.nl=\"zwart-boven\"\n        Button1, //P13\n        //% block=\"black-bottom\"\n        //% block.loc.nl=\"zwart-onder\"\n        Button2, //P15 \n        //% block=\"black-left\"\n        //% block.loc.nl=\"zwart-links\"\n        Button3, //P1\n        //% block=\"black-right\"\n        //% block.loc.nl=\"zwart-rechts\"\n        Button4, //P12\n        //% block=\"white-top\"\n        //% block.loc.nl=\"wit-boven\"\n        Button5, //p16\n        //% block=\"white-bottom\"\n        //% block.loc.nl=\"wit-onder\"\n        Button6, //P2\n        //% block=\"white-left\"\n        //% block.loc.nl=\"wit-links\"\n        Button7, //P8\n        //% block=\"white-right\"\n        //% block.loc.nl=\"wit-rechts\"\n        Button8, //P14\n        //% block=\"yellow-top\"\n        //% block.loc.nl=\"geel-boven\"\n        Button9, //P9\n        //% block=\"yellow-bottom\"\n        //% block.loc.nl=\"geel-onder\"\n        Button10, //P0\n        //% block=\"blue\"\n        //% block.loc.nl=\"blauw\"\n        Button11, //P5\n        //% block=\"red\"\n        //% block.loc.nl=\"rood\"\n        Button12 //P11\n    }\n\n    export let BUTTONMAX = 12\n\n    let PRESSED1 = false\n    let PRESSED2 = false\n    let PRESSED3 = false\n    let PRESSED4 = false\n    let PRESSED5 = false\n    let PRESSED6 = false\n    let PRESSED7 = false\n    let PRESSED8 = false\n    let PRESSED9 = false\n    let PRESSED10 = false\n    let PRESSED11 = false\n    let PRESSED12 = false\n\n    type gamepadHandler = () => void\n\n    let EventPressed1: gamepadHandler\n    let EventPressed2: gamepadHandler\n    let EventPressed3: gamepadHandler\n    let EventPressed4: gamepadHandler\n    let EventPressed5: gamepadHandler\n    let EventPressed6: gamepadHandler\n    let EventPressed7: gamepadHandler\n    let EventPressed8: gamepadHandler\n    let EventPressed9: gamepadHandler\n    let EventPressed10: gamepadHandler\n    let EventPressed11: gamepadHandler\n    let EventPressed12: gamepadHandler\n\n    let EventReleased1: gamepadHandler\n    let EventReleased2: gamepadHandler\n    let EventReleased3: gamepadHandler\n    let EventReleased4: gamepadHandler\n    let EventReleased5: gamepadHandler\n    let EventReleased6: gamepadHandler\n    let EventReleased7: gamepadHandler\n    let EventReleased8: gamepadHandler\n    let EventReleased9: gamepadHandler\n    let EventReleased10: gamepadHandler\n    let EventReleased11: gamepadHandler\n    let EventReleased12: gamepadHandler\n\n    export function handleEventPressed(button: Gamepad) {\n        switch (button) {\n            case Gamepad.Button1: PRESSED1 = true; if (EventPressed1) EventPressed1(); break;\n            case Gamepad.Button2: PRESSED2 = true; if (EventPressed2) EventPressed2(); break;\n            case Gamepad.Button3: PRESSED3 = true; if (EventPressed3) EventPressed3(); break;\n            case Gamepad.Button4: PRESSED4 = true; if (EventPressed4) EventPressed4(); break;\n            case Gamepad.Button5: PRESSED5 = true; if (EventPressed5) EventPressed5(); break;\n            case Gamepad.Button6: PRESSED6 = true; if (EventPressed6) EventPressed6(); break;\n            case Gamepad.Button7: PRESSED7 = true; if (EventPressed7) EventPressed7(); break;\n            case Gamepad.Button8: PRESSED8 = true; if (EventPressed8) EventPressed8(); break;\n            case Gamepad.Button9: PRESSED9 = true; if (EventPressed9) EventPressed9(); break;\n            case Gamepad.Button10: PRESSED10 = true; if (EventPressed10) EventPressed10(); break;\n            case Gamepad.Button11: PRESSED11 = true; if (EventPressed11) EventPressed11(); break;\n            case Gamepad.Button12: PRESSED12 = true; if (EventPressed12) EventPressed12(); break;\n        }\n    }\n\n    export function handleEventReleased(button: Gamepad) {\n        switch (button) {\n            case Gamepad.Button1: PRESSED1 = false; if (EventReleased1) EventReleased1(); break;\n            case Gamepad.Button2: PRESSED2 = false; if (EventReleased2) EventReleased2(); break;\n            case Gamepad.Button3: PRESSED3 = false; if (EventReleased3) EventReleased3(); break;\n            case Gamepad.Button4: PRESSED4 = false; if (EventReleased4) EventReleased4(); break;\n            case Gamepad.Button5: PRESSED5 = false; if (EventReleased5) EventReleased5(); break;\n            case Gamepad.Button6: PRESSED6 = false; if (EventReleased6) EventReleased6(); break;\n            case Gamepad.Button7: PRESSED7 = false; if (EventReleased7) EventReleased7(); break;\n            case Gamepad.Button8: PRESSED8 = false; if (EventReleased8) EventReleased8(); break;\n            case Gamepad.Button9: PRESSED9 = false; if (EventReleased9) EventReleased9(); break;\n            case Gamepad.Button10: PRESSED10 = false; if (EventReleased10) EventReleased10(); break;\n            case Gamepad.Button11: PRESSED11 = false; if (EventReleased11) EventReleased11(); break;\n            case Gamepad.Button12: PRESSED12 = false; if (EventReleased12) EventReleased12(); break;\n        }\n    }\n\n    radio.onReceivedNumber(function (button: number) {\n        if (button >= BUTTONMAX) {\n            button -= BUTTONMAX\n            handleEventReleased(button)\n        }\n        else\n            handleEventPressed(button)\n    })\n\n    //% block=\"join %group\"\n    //% block.loc.nl=\"sluit aan bij %group\"\n    export function setGroup(group: Group) {\n        GROUP = group + 1\n        radio.setGroup(GROUP)\n    }\n\n    //% block=\"%button is up\"\n    //% block.loc.nl=\"%button is losgelaten\"\n    export function isReleased(button: Gamepad): boolean {\n        switch (button) {\n            case Gamepad.Button1: return !PRESSED1;\n            case Gamepad.Button2: return !PRESSED2;\n            case Gamepad.Button3: return !PRESSED3;\n            case Gamepad.Button4: return !PRESSED4;\n            case Gamepad.Button5: return !PRESSED5;\n            case Gamepad.Button6: return !PRESSED6;\n            case Gamepad.Button7: return !PRESSED7;\n            case Gamepad.Button8: return !PRESSED8;\n            case Gamepad.Button9: return !PRESSED9;\n            case Gamepad.Button10: return !PRESSED10;\n            case Gamepad.Button11: return !PRESSED11;\n            case Gamepad.Button12: return !PRESSED12;\n        }\n        return false;\n    }\n\n    //% block=\"%button is down\"\n    //% block.loc.nl=\"%button is ingedrukt\"\n    export function isPressed(button: Gamepad): boolean {\n        switch (button) {\n            case Gamepad.Button1: return PRESSED1;\n            case Gamepad.Button2: return PRESSED2;\n            case Gamepad.Button3: return PRESSED3;\n            case Gamepad.Button4: return PRESSED4;\n            case Gamepad.Button5: return PRESSED5;\n            case Gamepad.Button6: return PRESSED6;\n            case Gamepad.Button7: return PRESSED7;\n            case Gamepad.Button8: return PRESSED8;\n            case Gamepad.Button9: return PRESSED9;\n            case Gamepad.Button10: return PRESSED10;\n            case Gamepad.Button11: return PRESSED11;\n            case Gamepad.Button12: return PRESSED12;\n        }\n        return false;\n    }\n\n    //% block=\"when %button is released\"\n    //% block.loc.nl=\"wanneer %button wordt losgelaten\"\n    export function onButtonReleased(button: Gamepad, programmableCode: () => void): void {\n        switch (button) {\n            case Gamepad.Button1: EventReleased1 = programmableCode; break;\n            case Gamepad.Button2: EventReleased2 = programmableCode; break;\n            case Gamepad.Button3: EventReleased3 = programmableCode; break;\n            case Gamepad.Button4: EventReleased4 = programmableCode; break;\n            case Gamepad.Button5: EventReleased5 = programmableCode; break;\n            case Gamepad.Button6: EventReleased6 = programmableCode; break;\n            case Gamepad.Button7: EventReleased7 = programmableCode; break;\n            case Gamepad.Button8: EventReleased8 = programmableCode; break;\n            case Gamepad.Button9: EventReleased9 = programmableCode; break;\n            case Gamepad.Button10: EventReleased10 = programmableCode; break;\n            case Gamepad.Button11: EventReleased11 = programmableCode; break;\n            case Gamepad.Button12: EventReleased12 = programmableCode; break;\n        }\n    }\n\n    //% block=\"when %button is pressed\"\n    //% block.loc.nl=\"wanneer op %button gedrukt\"\n    export function onButtonPressed(button: Gamepad, programmableCode: () => void): void {\n        switch (button) {\n            case Gamepad.Button1: EventPressed1 = programmableCode; break;\n            case Gamepad.Button2: EventPressed2 = programmableCode; break;\n            case Gamepad.Button3: EventPressed3 = programmableCode; break;\n            case Gamepad.Button4: EventPressed4 = programmableCode; break;\n            case Gamepad.Button5: EventPressed5 = programmableCode; break;\n            case Gamepad.Button6: EventPressed6 = programmableCode; break;\n            case Gamepad.Button7: EventPressed7 = programmableCode; break;\n            case Gamepad.Button8: EventPressed8 = programmableCode; break;\n            case Gamepad.Button9: EventPressed9 = programmableCode; break;\n            case Gamepad.Button10: EventPressed10 = programmableCode; break;\n            case Gamepad.Button11: EventPressed11 = programmableCode; break;\n            case Gamepad.Button12: EventPressed12 = programmableCode; break;\n        }\n    }\n\n}\n","README.md":"","pxt.json":"{\n    \"name\": \"pxt-joystick\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}}],"shares":[],"lastSaveTime":1738389634350}